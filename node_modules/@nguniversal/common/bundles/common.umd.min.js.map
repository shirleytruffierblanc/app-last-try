{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","nguniversal","common","ng","http","core","platformBrowser","rxjs","operators","this","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","Object","keys","forEach","key","includes","remove","makeStateKey","makeCacheKey","method","params","encodedParams","sort","map","k","get","join","intercept","req","next","handle","storeKey","hasKey","response","of","HttpResponse","body","headers","HttpHeaders","status","statusText","tap","event","set","getHeadersMap","e_1","_c","headersMap","_a","o","m","Symbol","iterator","i","call","length","value","done","__values","_b","getAll","e_1_1","error","return","decorators","type","Injectable","ctorParameters","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","args","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵnguniversal_modules_common_common_a","ɵTransferHttpCacheInterceptor","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n\t(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}),global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.rxjs,global.rxjs.operators,global.ng.common));\n}(this, (function (exports,http,core,platformBrowser,rxjs,operators,common) { 'use strict';\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHeadersMap(headers) {\n    var headersMap = {};\n    try {\n        for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var key = _b.value;\n            headersMap[key] = headers.getAll(key);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return headersMap;\n    var e_1, _c;\n}\nvar TransferHttpCacheInterceptor = /** @class */ (function () {\n    function TransferHttpCacheInterceptor(appRef, transferState) {\n        var _this = this;\n        this.transferState = transferState;\n        this.isCacheActive = true;\n        // Stop using the cache if the application has stabilized, indicating initial rendering is\n        // complete.\n        appRef.isStable\n            .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n            .then(function () { _this.isCacheActive = false; });\n    }\n    TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n        var _this = this;\n        Object.keys(this.transferState['store'])\n            .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });\n    };\n    TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {\n        // make the params encoded same as a url so it's easy to identify\n        var encodedParams = params.keys().sort().map(function (k) { return k + \"=\" + params.get(k); }).join('&');\n        var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n        return platformBrowser.makeStateKey(key);\n    };\n    TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        // Stop using the cache if there is a mutating call.\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n            this.isCacheActive = false;\n            this.invalidateCacheEntry(req.url);\n        }\n        if (!this.isCacheActive) {\n            // Cache is no longer active. Pass the request through.\n            return next.handle(req);\n        }\n        var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n        if (this.transferState.hasKey(storeKey)) {\n            // Request found in cache. Respond using it.\n            var response = this.transferState.get(storeKey, {});\n            return rxjs.of(new http.HttpResponse({\n                body: response.body,\n                headers: new http.HttpHeaders(response.headers),\n                status: response.status,\n                statusText: response.statusText,\n                url: response.url,\n            }));\n        }\n        else {\n            // Request not found in cache. Make the request and cache it.\n            var httpEvent = next.handle(req);\n            return httpEvent\n                .pipe(operators.tap(function (event) {\n                if (event instanceof http.HttpResponse) {\n                    _this.transferState.set(storeKey, {\n                        body: event.body,\n                        headers: getHeadersMap(event.headers),\n                        status: event.status,\n                        statusText: event.statusText,\n                        url: event.url,\n                    });\n                }\n            }));\n        }\n    };\n    TransferHttpCacheInterceptor.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    TransferHttpCacheInterceptor.ctorParameters = function () { return [\n        { type: core.ApplicationRef },\n        { type: platformBrowser.TransferState }\n    ]; };\n    return TransferHttpCacheInterceptor;\n}());\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\nvar TransferHttpCacheModule = /** @class */ (function () {\n    function TransferHttpCacheModule() {\n    }\n    TransferHttpCacheModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [platformBrowser.BrowserTransferStateModule],\n                    providers: [\n                        TransferHttpCacheInterceptor,\n                        { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                    ],\n                },] }\n    ];\n    return TransferHttpCacheModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction domContentLoadedFactory(doc) {\n    return function () { return new Promise(function (resolve, _reject) {\n        var contentLoaded = function () {\n            doc.removeEventListener('DOMContentLoaded', contentLoaded);\n            resolve();\n        };\n        doc.addEventListener('DOMContentLoaded', contentLoaded);\n    }); };\n}\nvar StateTransferInitializerModule = /** @class */ (function () {\n    function StateTransferInitializerModule() {\n    }\n    StateTransferInitializerModule.decorators = [\n        { type: core.NgModule, args: [{\n                    providers: [\n                        { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                    ]\n                },] }\n    ];\n    return StateTransferInitializerModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;\nexports.TransferHttpCacheModule = TransferHttpCacheModule;\nexports.StateTransferInitializerModule = StateTransferInitializerModule;\nexports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}